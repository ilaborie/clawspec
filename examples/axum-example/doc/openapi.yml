openapi: 3.1.0
info:
  title: ''
  version: ''
paths:
  /api/observations:
    get:
      operationId: get-observations
      parameters:
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
      - name: Authorization
        in: header
        required: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        required: false
        schema:
          type: string
      - name: X-User-ID
        in: header
        required: false
        schema:
          type: integer
          format: int64
          minimum: 0
      - name: X-Client-Version
        in: header
        required: false
        schema:
          type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObservations'
    post:
      operationId: post-observations
      parameters:
      - name: X-Test-Case
        in: header
        required: false
        schema:
          type: string
      - name: X-Expected-Status
        in: header
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/binary'
          application/pdf:
            schema:
              $ref: '#/components/schemas/binary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlatObservation'
          text/xml:
            schema:
              $ref: '#/components/schemas/binary'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationId'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestClientError'
        '415':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestClientError'
  /api/observations/import:
    post:
      operationId: post-observations-import
      parameters: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/binary'
      responses: {}
  /api/observations/upload:
    post:
      operationId: post-observations-upload
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/binary'
      responses: {}
  /api/observations/{observation_id}:
    put:
      operationId: put-observations-observation-id
      parameters:
      - name: observation_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ObservationId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialObservation'
            example:
              color: green
              name: Updated Parrot
              notes: Updated via API
              position:
                lat: -26.2
                lng: 13.5
      responses:
        '200':
          description: ''
    delete:
      operationId: delete-observations-observation-id
      parameters:
      - name: observation_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ObservationId'
      responses:
        '200':
          description: ''
          content:
            application/json: {}
    patch:
      operationId: patch-observations-observation-id
      parameters:
      - name: observation_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ObservationId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchObservation'
            example:
              color: red
              name: Partially Updated Parrot
              notes: null
              position: null
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
components:
  schemas:
    ListObservations:
      type: object
      required:
      - observations
      properties:
        observations:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
    Observation:
      allOf:
      - $ref: '#/components/schemas/PartialObservation'
      - type: object
        required:
        - id
        properties:
          id:
            $ref: '#/components/schemas/ObservationId'
    ObservationId:
      type: integer
      minimum: 0
    TestClientError:
      type: object
      required:
      - status
      - timestamp
      - error
      properties:
        error:
          $ref: '#/components/schemas/ExtractorError'
        status:
          type: integer
          format: int32
          minimum: 0
        timestamp:
          type: string
