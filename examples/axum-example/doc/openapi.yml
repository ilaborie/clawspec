openapi: 3.1.0
info:
  title: Bird Observation API
  description: A comprehensive API for managing bird observations with support for multiple content types, file uploads, and bulk operations. This API demonstrates RESTful design patterns and provides comprehensive CRUD operations for bird observation data.
  contact:
    name: Bird Observation Team
    url: https://birdwatch.example.com/support
    email: api-support@birdwatch.example.com
  version: 1.0.0
servers:
- url: https://api.birdwatch.example.com/api
  description: Production server
paths:
  /api/observations:
    get:
      tags:
      - listing
      - observations
      description: Retrieve observations
      operationId: get-observations
      parameters:
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
      - name: Authorization
        in: header
        required: false
        schema:
          type: string
      - name: X-Request-ID
        in: header
        required: false
        schema:
          type: string
      - name: X-User-ID
        in: header
        required: false
        schema:
          type: integer
          format: int64
          minimum: 0
      - name: X-Client-Version
        in: header
        required: false
        schema:
          type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListObservations'
    post:
      tags:
      - observations
      description: Create observation
      operationId: post-observations
      parameters:
      - name: X-Test-Case
        in: header
        required: false
        schema:
          type: string
      - name: X-Expected-Status
        in: header
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialObservation'
            example:
              color: rainbow
              name: Metadata Demo Bird
              notes: Used to demonstrate OpenAPI metadata features
              position:
                lat: -90.0
                lng: 45.0
          application/pdf:
            schema:
              type: string
              format: binary
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlatObservation'
          text/xml:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
                minimum: 0
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestClientError'
        '415':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestClientError'
  /api/observations/1007:
    put:
      tags:
      - observations
      - modification
      description: Update an existing observation with new data
      operationId: put-observations-1007
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialObservation'
            example:
              color: rainbow
              name: Updated Metadata Demo
              notes: Used to demonstrate OpenAPI metadata features
              position:
                lat: -90.0
                lng: 45.0
      responses:
        '200':
          description: ''
    delete:
      tags:
      - observations
      description: Remove observation from the system
      operationId: delete-observations-1007
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value'
  /api/observations/import:
    post:
      tags:
      - admin
      - bulk-operations
      - import
      - observations
      description: Import observations
      operationId: post-observations-import
      parameters: []
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportResponse'
  /api/observations/upload:
    post:
      tags:
      - file-operations
      - observations
      - upload
      description: Upload observations
      operationId: post-observations-upload
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
  /api/observations/{observation_id}:
    put:
      tags:
      - observations
      description: Update observation by ID
      operationId: put-observations-observation-id
      parameters:
      - name: observation_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ObservationId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialObservation'
            example:
              color: green
              name: Updated Parrot
              notes: Updated via API
              position:
                lat: -26.2
                lng: 13.5
      responses:
        '200':
          description: ''
    delete:
      tags:
      - observations
      description: Delete observation by ID
      operationId: delete-observations-observation-id
      parameters:
      - name: observation_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ObservationId'
      responses:
        '200':
          description: ''
          content:
            application/json: {}
    patch:
      tags:
      - observations
      description: Partially update observation by ID
      operationId: patch-observations-observation-id
      parameters:
      - name: observation_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ObservationId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchObservation'
            example:
              color: red
              name: Partially Updated Parrot
              notes: null
              position: null
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
components:
  schemas:
    ExtractorError:
      oneOf:
      - type: object
        description: JSON parsing or serialization error
        required:
        - details
        - type
        properties:
          details:
            type: object
            description: JSON parsing or serialization error
            required:
            - message
            properties:
              location:
                type:
                - string
                - 'null'
                description: Location where the error occurred (e.g., "body", "`field_name`")
              message:
                type: string
                description: Detailed error message
          type:
            type: string
            enum:
            - JsonError
      - type: object
        description: XML parsing error
        required:
        - details
        - type
        properties:
          details:
            type: object
            description: XML parsing error
            required:
            - message
            properties:
              element:
                type:
                - string
                - 'null'
                description: XML element where the error occurred
              message:
                type: string
                description: Detailed error message
          type:
            type: string
            enum:
            - XmlError
      - type: object
        description: Form data processing error
        required:
        - details
        - type
        properties:
          details:
            type: object
            description: Form data processing error
            required:
            - message
            properties:
              field:
                type:
                - string
                - 'null'
                description: Form field that caused the error
              message:
                type: string
                description: Detailed error message
          type:
            type: string
            enum:
            - FormError
      - type: object
        description: Multipart processing error
        required:
        - details
        - type
        properties:
          details:
            type: object
            description: Multipart processing error
            required:
            - message
            properties:
              message:
                type: string
                description: Detailed error message
              part:
                type:
                - string
                - 'null'
                description: Multipart section that caused the error
          type:
            type: string
            enum:
            - MultipartError
      - type: object
        description: Encoding/decoding error (e.g., UTF-8 conversion)
        required:
        - details
        - type
        properties:
          details:
            type: object
            description: Encoding/decoding error (e.g., UTF-8 conversion)
            required:
            - message
            - encoding
            properties:
              encoding:
                type: string
                description: Expected encoding type
              message:
                type: string
                description: Detailed error message
          type:
            type: string
            enum:
            - EncodingError
      - type: object
        description: Unsupported content type
        required:
        - details
        - type
        properties:
          details:
            type: object
            description: Unsupported content type
            required:
            - content_type
            - supported
            properties:
              content_type:
                type: string
                description: The unsupported content type
              supported:
                type: array
                items:
                  type: string
                description: List of supported content types
          type:
            type: string
            enum:
            - UnsupportedMediaType
      - type: object
        description: Generic bad request error
        required:
        - details
        - type
        properties:
          details:
            type: object
            description: Generic bad request error
            required:
            - message
            properties:
              message:
                type: string
                description: Detailed error message
          type:
            type: string
            enum:
            - BadRequest
      description: |-
        Custom error type for extractors that provides structured error responses.

        This enum represents different types of extraction failures that can occur
        when processing HTTP requests. Each variant corresponds to a specific error
        scenario and provides appropriate HTTP status codes and error details.
    FlatObservation:
      allOf:
      - $ref: '#/components/schemas/LngLat'
      - type: object
        required:
        - name
        properties:
          color:
            type:
            - string
            - 'null'
          name:
            type: string
          notes:
            type:
            - string
            - 'null'
      description: Flattened observation structure for form data that doesn't support nested objects.
    ImportResponse:
      type: object
      required:
      - imported
      - error_count
      - bytes_processed
      - created_ids
      properties:
        bytes_processed:
          type: integer
          minimum: 0
        created_ids:
          type: array
          items:
            $ref: '#/components/schemas/ObservationId'
        error_count:
          type: integer
          minimum: 0
        errors:
          type:
          - array
          - 'null'
          items:
            type: string
        imported:
          type: integer
          minimum: 0
    ListObservations:
      type: object
      required:
      - observations
      properties:
        observations:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
    LngLat:
      type: object
      required:
      - lng
      - lat
      properties:
        lat:
          type: number
          format: double
        lng:
          type: number
          format: double
    Observation:
      allOf:
      - $ref: '#/components/schemas/PartialObservation'
      - type: object
        required:
        - id
        properties:
          id:
            $ref: '#/components/schemas/ObservationId'
    ObservationId:
      type: integer
      minimum: 0
    PartialObservation:
      type: object
      required:
      - name
      - position
      properties:
        color:
          type:
          - string
          - 'null'
        name:
          type: string
        notes:
          type:
          - string
          - 'null'
        position:
          $ref: '#/components/schemas/LngLat'
    PatchObservation:
      type: object
      properties:
        color:
          type:
          - string
          - 'null'
        name:
          type:
          - string
          - 'null'
        notes:
          type:
          - string
          - 'null'
        position:
          oneOf:
          - type: 'null'
          - $ref: '#/components/schemas/LngLat'
    TestClientError:
      type: object
      required:
      - status
      - timestamp
      - error
      properties:
        error:
          $ref: '#/components/schemas/ExtractorError'
        status:
          type: integer
          format: int32
          minimum: 0
        timestamp:
          type: string
    UploadResponse:
      type: object
      required:
      - uploaded
      - error_count
      - created_ids
      properties:
        created_ids:
          type: array
          items:
            $ref: '#/components/schemas/ObservationId'
        error_count:
          type: integer
          minimum: 0
        errors:
          type:
          - array
          - 'null'
          items:
            type: string
        uploaded:
          type: integer
          minimum: 0
    Value: {}
tags:
- name: admin
- name: bulk-operations
- name: file-operations
- name: import
- name: listing
- name: modification
- name: observations
- name: upload
