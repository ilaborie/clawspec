name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info
  MSRV: "1.85"

jobs:
  check:
    name: Check Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install mise
        uses: jdx/mise-action@v2
        with:
          experimental: true
          
      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal
          rustup default stable
          rustup component add rustfmt clippy
          
      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
            
      - name: Install dependencies
        run: mise install
        
      - name: Run comprehensive checks
        run: mise run check

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install mise
        uses: jdx/mise-action@v2
        with:
          experimental: true
          
      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable --profile minimal
          rustup default stable
          
      - name: Install dependencies
        run: mise install
        
      - name: Run security audit
        run: mise run audit
        continue-on-error: true

  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install mise
        uses: jdx/mise-action@v2
        with:
          experimental: true
          
      - name: Setup Rust toolchain (MSRV)
        run: |
          rustup toolchain install ${{ env.MSRV }} --profile minimal
          rustup default ${{ env.MSRV }}
          rustup component add rustfmt clippy
          
      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-msrv-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-msrv-cargo-
            
      - name: Install dependencies
        run: mise install
        
      - name: Check compilation with MSRV
        run: cargo check --locked --all-targets --all-features

  minimal-versions:
    name: Minimal Dependency Versions
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install mise
        uses: jdx/mise-action@v2
        with:
          experimental: true
          
      - name: Setup Rust toolchain (nightly)
        run: |
          rustup toolchain install nightly --profile minimal
          rustup default nightly
          
      - name: Install dependencies
        run: mise install
        
      - name: Generate Cargo.lock with minimal versions
        run: cargo +nightly update -Z minimal-versions
        
      - name: Setup Rust toolchain (MSRV)
        run: |
          rustup toolchain install ${{ env.MSRV }} --profile minimal
          rustup default ${{ env.MSRV }}
          
      - name: Check compilation with minimal versions
        run: cargo check --locked --all-targets --all-features

  beta:
    name: Beta Rust Channel
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install mise
        uses: jdx/mise-action@v2
        with:
          experimental: true
          
      - name: Setup Rust toolchain (beta)
        run: |
          rustup toolchain install beta --profile minimal
          rustup default beta
          rustup component add rustfmt clippy
          
      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-beta-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-beta-cargo-
            
      - name: Install dependencies
        run: mise install
        
      - name: Run comprehensive checks with beta
        run: mise run check