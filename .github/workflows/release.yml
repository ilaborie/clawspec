name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info

jobs:
  create-release:
    name: ðŸŽ‰ Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for changelog generation
        
      - name: Setup Rust environment
        uses: ./.github/actions/setup-rust
        with:
          rust-version: stable
          cache-key-suffix: release
        
      - name: Verify version matches tag
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          CARGO_VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.workspace_members[0]' | xargs cargo metadata --no-deps --format-version 1 --manifest-path | jq -r '.packages[0].version')
          if [ "$TAG_VERSION" != "$CARGO_VERSION" ]; then
            echo "Tag version ($TAG_VERSION) does not match Cargo.toml version ($CARGO_VERSION)"
            exit 1
          fi
        
      - name: Run tests
        run: mise run check
        
      - name: Generate changelog
        run: git cliff --tag ${{ github.ref_name }} --output CHANGELOG.md
        
      - name: Build release binaries
        run: |
          # Build optimized release binaries
          cargo build --release --locked
          
          # Create release artifacts directory
          mkdir -p artifacts
          
          # Copy binaries if they exist (adjust based on your actual binaries)
          if [ -f target/release/clawspec-cli ]; then
            cp target/release/clawspec-cli artifacts/
          fi
        
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG.md
          files: |
            artifacts/*
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-crates:
    name: ðŸ“¦ Publish to crates.io
    runs-on: ubuntu-latest
    needs: create-release
    if: ${{ !contains(github.ref_name, '-') }}  # Only publish stable releases
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Rust environment
        uses: ./.github/actions/setup-rust
        with:
          rust-version: stable
          cache-key-suffix: publish
        
      - name: Publish to crates.io
        run: |
          # Publish core libraries first (order matters for dependencies)
          cargo publish -p clawspec-core --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
          
          # Wait a bit for the registry to update
          sleep 10
          
          # Publish other crates
          cargo publish -p clawspec-macro --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
          sleep 10
          
          cargo publish -p clawspec-utoipa --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
          sleep 10
          
          cargo publish -p clawspec-cli --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true  # Some crates might already be published